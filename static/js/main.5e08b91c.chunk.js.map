{"version":3,"sources":["components/Dropdown/DropDown.module.css","components/Container/Container.module.css","components/Container/Container.jsx","components/Dropdown/Dropdown.jsx","components/ColorPicker/ColorPicker.jsx","components/Todolist/Todolist.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Dropdown","state","visible","toggle","setState","prevState","dropdown","type","dropdown__toggle","onClick","this","dropdown__menu","Component","ColorPicker","activeOptionIdx","setActiveIndex","index","makeOptionClassName","optionClasses","push","join","activeOption","props","options","label","color","map","optionClassName","style","backgroundColor","TodoList","todos","onDeleteTodo","id","text","completed","colorPickerOptions","App","intitialsTodo","deleteTodo","todoId","filter","todo","completedTodos","reduce","acc","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e08b91c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"DropDown_dropdown__be4At\",\"dropdown__menu\":\"DropDown_dropdown__menu__1uM1J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","import styles from './Container.module.css';\n\nconst Container = ({ children }) => {\n    return (\n        <div className={styles.container}>{children}</div>\n    );\n};\n\nexport default Container;","import { Component } from \"react\";\nimport styles from './DropDown.module.css';\n\n\nclass Dropdown extends Component {\n    state = {\n        visible: false,\n    };\n\n    // Используется предыдущие значение state.visible\n    toggle = () => {\n        this.setState(prevState => ({\n            visible: !prevState.visible,\n        }))\n    }\n\n    // Перезаписывается текущие значение state.visible\n    // show = () => {\n    //     this.setState({ visible: true });\n    // }\n    // hide = () => {\n    //     this.setState({ visible: false });\n    // }\n\n    render() {\n        return (\n            <div className={styles.dropdown}>\n                <button \n                    type=\"button\" \n                    className ={styles.dropdown__toggle} \n                    onClick={this.toggle}>\n                    {this.state.visible ? 'Скрыть': 'Показать'}\n                </button>\n                \n                {/* <button type=\"button\" className ={styles.dropdown__toggle} onClick={this.show}>Показать</button> */}\n                {/* <button type=\"button\" className ={styles.dropdown__toggle} onClick={this.hide}>Скрыть</button> */}\n\n                {this.state.visible && (<div className={styles.dropdown__menu}>Типо меню</div>)}\n            </div>\n        );\n    };\n};\n\nexport default Dropdown;","import { Component } from 'react';\nimport './ColorPicker.css';\n\nclass ColorPicker extends Component {\n    state = {\n        activeOptionIdx: 0,\n    }\n\n    setActiveIndex = (index) => {\n        this.setState({ activeOptionIdx: index });\n    }\n\n    makeOptionClassName = (index) => {\n        const optionClasses = ['colorPicker__option']\n\n        if(index === this.state.activeOptionIdx) {\n            optionClasses.push('colorPicker__option-active ');\n        }\n        \n        return optionClasses.join(' ');\n    }\n\n    render () {\n         const activeOption = this.props.options[this.state.activeOptionIdx];\n\n        return (\n            <div className=\"colorPicker\">\n                <h2 className=\"colorPicker__title\">Color Picker</h2>\n                <p>Выбран цвет: {activeOption.label}; hex: {activeOption.color};</p>\n                <div>\n                    {this.props.options.map(({ label, color }, index) => {\n                        const optionClassName = this.makeOptionClassName(index)\n\n                        return <button \n                        type=\"button\"\n                        key={label} \n                        className={optionClassName} \n                        style={{ \n                            backgroundColor: color,}}\n                        onClick={() => {\n                            return this.setActiveIndex(index);\n                        }}>\n                        </button>\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\n// const ColorPicker = ({ options }) => {\n//     return (\n//         <div className={styles.colorPicker}>\n//             <h2 className={styles.colorPicker__title}>Color Picker</h2>\n//             <div>\n//                 {options.map(({label, color }) => {\n//                     return <span \n//                     key={label} \n//                     className={styles.colorPicker__option} \n//                     style={{ backgroundColor: color}}>\n//                     </span>\n//                 })}\n//             </div>\n//         </div>\n//     );\n// };\n\nexport default ColorPicker;\n","import './Todolist.css';\n\nconst TodoList = ({ todos, onDeleteTodo }) => {\n\n    return (\n    <ul className=\"todolist\">{todos.map(({id, text, completed}) => {\n\n        return (\n        <li key={id} className=\"todolist__item\">\n            <p className=\"todolist__text\">{text}</p>\n            <button onClick={()=> onDeleteTodo(id)}>Удалить</button>\n            </li>)\n    })}</ul>\n    );\n};\n\nexport default TodoList;","import '../node_modules/modern-normalize/modern-normalize.css';\nimport { Component } from 'react';\nimport Container from './components/Container/Container.jsx';\nimport Dropdown from './components/Dropdown/Dropdown.jsx';\nimport ColorPicker from './components/ColorPicker';\nimport TodoList from './components/Todolist';\nimport intitialsTodo from './components/Todolist/initialsTodo.json';\n\n\nconst colorPickerOptions = [\n  { label: 'red', color: '#f44336'},\n  { label: 'green', color: '#4caf50'},\n  { label: 'blue', color: '#2196f3'},\n  { label: 'grey', color: '#607d8b'},\n  { label: 'pink', color: '#e91e63'},\n  { label: 'indigo', color: '#3f51b5'},\n];\n\nclass App extends Component {\n  state = {\n    todos: intitialsTodo,\n  };\n\n  deleteTodo = (todoId) => {\n    this.setState((prevState)=> ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId)\n    }));\n  };\n\n\n  render () {\n    const { todos } = this.state;\n\n    // const completedTodos = todos.filter(todo => todo.completed);\n    const completedTodos = todos.reduce((acc, todo) => {\n      return todo.completed ? acc + 1: acc;\n    }, 0);\n\n    return (\n      <Container>\n        <Dropdown />\n        <ColorPicker options={colorPickerOptions} />\n        <div>\n          <p>Общее кол-во: {todos.length}</p>\n          <p>Кол-во выполненных: {completedTodos}</p>\n        </div>\n        <TodoList todos={todos} onDeleteTodo={this.deleteTodo} />\n      </Container>\n    );\n  }\n}\n\n// function App() {\n//   return (\n//     <Container>\n//       <Dropdown />\n//       <ColorPicker options={colorPickerOptions} />\n//       <TodoList />\n//     </Container>\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}