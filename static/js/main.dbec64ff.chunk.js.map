{"version":3,"sources":["components/Container/Container.jsx","components/Todolist/Todolist.jsx","App.js","reportWebVitals.js","index.js","components/Container/Container.module.css"],"names":["Container","children","className","styles","container","TodoList","todos","onDeleteTodo","onToggleCompleted","map","id","text","completed","type","checked","onChange","onClick","App","state","intitialsTodo","deleteTodo","todoId","setState","prevState","filter","todo","toggleCompleted","console","log","formSubmitHandler","data","setTimeout","this","completedTodos","length","style","width","marginBottom","padding","border","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"uRAQeA,EANG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjB,OACI,qBAAKC,UAAWC,IAAOC,UAAvB,SAAmCH,KCkB5BI,G,MApBE,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,kBAErC,OACA,oBAAIN,UAAU,WAAd,SACKI,EAAMG,KAAI,YAA4B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,UAEvB,OACA,qBAAaV,UAAU,iBAAvB,UACI,uBACAW,KAAK,WACLC,QAASF,EACTG,SAAU,kBAAKP,EAAkBE,MAEjC,mBAAGR,UAAU,iBAAb,SAA+BS,IAC/B,wBAAQK,QAAS,kBAAKT,EAAaG,IAAnC,0DAPKA,U,OCuFFO,E,4MA5EbC,MAAQ,CACNZ,MAAOa,G,EAITC,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACC,GAAD,MAAe,CAC3BjB,MAAOiB,EAAUjB,MAAMkB,QAAO,SAAAC,GAAI,OAAIA,EAAKf,KAAOW,U,EAItDK,gBAAkB,SAAAL,GAChBM,QAAQC,IAAIP,GAEZ,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BjB,MAAOiB,EAAUjB,MAAMG,KAAI,SAAAgB,GACzB,OAAGA,EAAKf,KAAOW,EACN,2BACFI,GADL,IAEEb,WAAYa,EAAKb,YAIda,U,EAKbI,kBAAoB,SAAAC,GAClBC,YAAW,WACTJ,QAAQC,IAAIE,KACX,M,4CAGL,WAAW,IACDxB,EAAU0B,KAAKd,MAAfZ,MAEF2B,EAAiB3B,EAAMkB,QAAO,SAAAC,GAAI,OAAIA,EAAKb,aAAWsB,OAK5D,OACE,cAAC,EAAD,UAGE,sBAAKC,MAAO,CACVC,MAAO,QACPC,aAAc,OACdC,QAAS,OACTC,OAAQ,oBAJV,UAME,iGAAkBjC,EAAM4B,UACxB,qIAAwBD,KAC1B,cAAC,EAAD,CACA3B,MAAOA,EACPC,aAAcyB,KAAKZ,WACnBZ,kBAAmBwB,KAAKN,2B,GA1Ddc,aCPHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,UAAY,+B","file":"static/js/main.dbec64ff.chunk.js","sourcesContent":["import styles from './Container.module.css';\n\nconst Container = ({ children }) => {\n    return (\n        <div className={styles.container}>{children}</div>\n    );\n};\n\nexport default Container;","import './Todolist.css';\n\nconst TodoList = ({ todos, onDeleteTodo, onToggleCompleted }) => {\n\n    return (\n    <ul className=\"todolist\">\n        {todos.map(({id, text, completed}) => {\n\n        return (\n        <li key={id} className=\"todolist__item\">\n            <input \n            type=\"checkbox\"\n            checked={completed}\n            onChange={()=> onToggleCompleted(id)}\n            />\n            <p className=\"todolist__text\">{text}</p>\n            <button onClick={()=> onDeleteTodo(id)}>Удалить</button>\n            </li>)\n    })}</ul>\n    );\n};\n\nexport default TodoList;","import '../node_modules/modern-normalize/modern-normalize.css';\nimport { Component } from 'react';\nimport Container from './components/Container/Container.jsx';\n// import Dropdown from './components/Dropdown/Dropdown.jsx';\n// import ColorPicker from './components/ColorPicker';\nimport TodoList from './components/Todolist';\nimport intitialsTodo from './components/Todolist/initialsTodo.json';\n// import Form from './components/Form';\n\n\n// const colorPickerOptions = [\n//   { label: 'red', color: '#f44336'},\n//   { label: 'green', color: '#4caf50'},\n//   { label: 'blue', color: '#2196f3'},\n//   { label: 'grey', color: '#607d8b'},\n//   { label: 'pink', color: '#e91e63'},\n//   { label: 'indigo', color: '#3f51b5'},\n// ];\n\nclass App extends Component {\n  state = {\n    todos: intitialsTodo,\n  \n  };\n\n  deleteTodo = (todoId) => {\n    this.setState((prevState)=> ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId)\n    }));\n  };\n\n  toggleCompleted = todoId => {\n    console.log(todoId);\n\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => {\n        if(todo.id === todoId) {\n          return {\n            ...todo,\n            completed: !todo.completed\n          };\n        }\n\n        return todo;\n      })\n    }))\n  }\n\n  formSubmitHandler = data => {\n    setTimeout(()=> {\n      console.log(data);\n    }, 1000)\n  }\n\n  render () {\n    const { todos } = this.state;\n\n    const completedTodos = todos.filter(todo => todo.completed).length;\n    // const completedTodos = todos.reduce((acc, todo) => {\n    //   return todo.completed ? acc + 1: acc;\n    // }, 0);\n\n    return (\n      <Container>\n        {/* <Dropdown /> */}\n        {/* <ColorPicker options={colorPickerOptions} /> */}\n        <div style={{\n          width: '400px',\n          marginBottom: '60px',\n          padding: '10px',\n          border: '1px solid indigo'\n          }}>\n          <p>Общее кол-во: {todos.length}</p>\n          <p>Кол-во выполненных: {completedTodos}</p>\n        <TodoList \n        todos={todos} \n        onDeleteTodo={this.deleteTodo}\n        onToggleCompleted={this.toggleCompleted}\n        />\n        </div>\n        {/* <Form propOnSobmit={this.formSubmitHandler}/> */}\n      </Container>\n    );\n  }\n}\n\n// function App() {\n//   return (\n//     <Container>\n//       <Dropdown />\n//       <ColorPicker options={colorPickerOptions} />\n//       <TodoList />\n//     </Container>\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};"],"sourceRoot":""}