{"version":3,"sources":["components/Form/Form.module.css","components/Container/Container.jsx","components/Form/Form.jsx","App.js","reportWebVitals.js","index.js","components/Container/Container.module.css"],"names":["module","exports","Container","children","className","styles","container","Form","state","name","tag","experience","licence","nameInputId","shortid","generate","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","console","log","props","propOnSobmit","reset","handleLicence","checked","onSubmit","this","form","htmlFor","type","onChange","id","disabled","Component","App","todos","intitialsTodo","deleteTodo","todoId","prevState","filter","todo","formSubmitHandler","data","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70fb4c20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\"};","import styles from './Container.module.css';\n\nconst Container = ({ children }) => {\n    return (\n        <div className={styles.container}>{children}</div>\n    );\n};\n\nexport default Container;","import { Component } from \"react\";\nimport shortid from 'shortid';\nimport styles from './Form.module.css';\n\n\nclass Form extends Component {\n    state = {\n        name: '',\n        tag: '',\n        experience: 'junior',\n        licence: false\n    };\n\n    nameInputId = shortid.generate();\n    \n    handleChange = event => {\n        const { name, value } = event.currentTarget;\n\n          this.setState({\n          [name]: value,\n        })\n    }\n    \n    handleSubmit = event => {\n        event.preventDefault ()\n        console.log('log in Form: ', this.state);\n        this.props.propOnSobmit(this.state);\n        this.reset();\n    }\n\n    handleLicence = event => {\n        console.log(event.currentTarget.checked)\n\n        this.setState({ licence: event.currentTarget.checked})\n    }\n\n    reset = () => {\n        this.setState({\n            name: '',\n            tag: '',    \n        })\n    }\n\n\n    render() {\n\n        return (\n\n            <form \n            onSubmit={this.handleSubmit}\n            className={styles.form}\n            >\n              <label htmlFor={this.nameInputId}>\n               Name <input \n                type=\"text\" \n                name=\"name\"\n                value={this.state.name} \n                onChange={this.handleChange}\n                id={this.nameInputId}\n                />\n              </label>\n              <br/>\n              <label htmlFor={this.nameInputId}>\n                Nickname <input \n                type=\"text\" \n                name=\"tag\"\n                value={this.state.tag}\n                onChange={this.handleChange}\n                id={this.nameInputId}\n                />\n              </label>\n              <br/>\n\n              <label htmlFor=\"\">\n                  <input \n                  type=\"radio\" \n                  name=\"experience\" \n                  value=\"junior\"\n                  checked={this.state.experience === 'junior'}\n                  onChange={this.handleChange}\n                  /> Junior\n              </label>\n              <label htmlFor=\"\">\n                  <input \n                  type=\"radio\" \n                  name=\"experience\" \n                  value=\"middle\"\n                  checked={this.state.experience === 'middle'}\n                  onChange={this.handleChange}\n                  /> Middle\n              </label>\n              <label htmlFor=\"\">\n                  <input \n                  type=\"radio\" \n                  name=\"experience\" \n                  value=\"senior\"\n                  checked={this.state.experience === 'senior'}\n                  onChange={this.handleChange}\n                  /> Senior\n              </label>\n              <br/>\n             \n              <label>\n                  <input \n                  type=\"checkbox\" \n                  name=\"licence\" \n                  checked={this.state.licence}\n                  onChange={this.handleLicence}\n                  />\n                  policy......\n              </label>\n              <button \n              type=\"submit\"\n              disabled={!this.state.licence}\n              >Отправить</button>\n            </form>\n        )\n    }\n}\n\nexport default Form;\n","import '../node_modules/modern-normalize/modern-normalize.css';\nimport { Component } from 'react';\nimport Container from './components/Container/Container.jsx';\n// import Dropdown from './components/Dropdown/Dropdown.jsx';\n// import ColorPicker from './components/ColorPicker';\n// import TodoList from './components/Todolist';\nimport intitialsTodo from './components/Todolist/initialsTodo.json';\nimport Form from './components/Form';\n\n\n// const colorPickerOptions = [\n//   { label: 'red', color: '#f44336'},\n//   { label: 'green', color: '#4caf50'},\n//   { label: 'blue', color: '#2196f3'},\n//   { label: 'grey', color: '#607d8b'},\n//   { label: 'pink', color: '#e91e63'},\n//   { label: 'indigo', color: '#3f51b5'},\n// ];\n\nclass App extends Component {\n  state = {\n    todos: intitialsTodo,\n  \n  };\n\n  deleteTodo = (todoId) => {\n    this.setState((prevState)=> ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId)\n    }));\n  };\n\n  formSubmitHandler = data => {\n    setTimeout(()=> {\n      console.log(data);\n    }, 1000)\n  }\n\n  render () {\n    // const { todos } = this.state;\n\n    // const completedTodos = todos.filter(todo => todo.completed).length;\n    // // const completedTodos = todos.reduce((acc, todo) => {\n    // //   return todo.completed ? acc + 1: acc;\n    // // }, 0);\n\n    return (\n      <Container>\n        {/* <Dropdown /> */}\n        {/* <ColorPicker options={colorPickerOptions} /> */}\n        {/* <div style={{\n          width: '400px',\n          marginBottom: '60px',\n          padding: '10px',\n          border: '1px solid indigo'\n          }}>\n          <p>Общее кол-во: {todos.length}</p>\n          <p>Кол-во выполненных: {completedTodos}</p>\n        <TodoList todos={todos} onDeleteTodo={this.deleteTodo} />\n        </div> */}\n        <Form propOnSobmit={this.formSubmitHandler}/>\n      </Container>\n    );\n  }\n}\n\n// function App() {\n//   return (\n//     <Container>\n//       <Dropdown />\n//       <ColorPicker options={colorPickerOptions} />\n//       <TodoList />\n//     </Container>\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};"],"sourceRoot":""}